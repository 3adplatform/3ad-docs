import type { PageTree } from 'fumadocs-core/server';
import { type HTMLAttributes, type ReactNode } from 'react';
import { type IconItemType, type LinkItemType } from '../layouts/links.js';
import { type BaseLayoutProps } from './shared.js';
import { CollapsibleControl, Navbar, NavbarSidebarTrigger } from '../layouts/docs-client.js';
import { type SidebarOptions } from '../layouts/docs/shared.js';
export interface DocsLayoutProps extends BaseLayoutProps {
    tree: PageTree.Root;
    sidebar?: Partial<SidebarOptions> & {
        enabled?: boolean;
        component?: ReactNode;
    };
    /**
     * Props for the `div` container
     */
    containerProps?: HTMLAttributes<HTMLDivElement>;
}
export declare function DocsLayout({ nav: { transparentMode, ...nav }, sidebar, searchToggle, disableThemeSwitch, themeSwitch, i18n, children, ...props }: DocsLayoutProps): ReactNode;
export declare function DocsLayoutSidebar({ collapsible, components, nav, links, footer, banner, ...props }: Omit<SidebarOptions, 'tabs'> & {
    links?: LinkItemType[];
    nav?: ReactNode;
}): import("react/jsx-runtime").JSX.Element;
export declare function DocsLayoutSidebarFooter({ i18n, themeSwitch, links, }: {
    i18n?: DocsLayoutProps['i18n'];
    links?: IconItemType[];
    themeSwitch?: DocsLayoutProps['themeSwitch'];
}): import("react/jsx-runtime").JSX.Element;
export { CollapsibleControl, Navbar, NavbarSidebarTrigger, type LinkItemType };
export { getSidebarTabsFromOptions } from './docs/shared.js';
//# sourceMappingURL=docs.d.ts.map