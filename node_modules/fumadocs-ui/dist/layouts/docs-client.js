'use client';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Menu, Sidebar as SidebarIcon } from '../icons.js';
import { cn } from '../utils/cn.js';
import { buttonVariants } from '../components/ui/button.js';
import { useSidebar } from '../contexts/sidebar.js';
import { useNav } from '../contexts/layout.js';
import { SidebarCollapseTrigger } from '../components/layout/sidebar.js';
import { SearchToggle } from '../components/layout/search-toggle.js';
export function Navbar(props) {
    const { open } = useSidebar();
    const { isTransparent } = useNav();
    return (_jsx("header", { id: "nd-subnav", ...props, className: cn('sticky top-(--fd-banner-height) z-30 flex h-14 items-center px-4 border-b transition-colors backdrop-blur-sm md:px-6', (!isTransparent || open) && 'bg-fd-background/80', props.className), children: props.children }));
}
export function NavbarSidebarTrigger(props) {
    const { setOpen } = useSidebar();
    return (_jsx("button", { ...props, className: cn(buttonVariants({
            color: 'ghost',
            size: 'icon',
        }), props.className), onClick: () => setOpen((prev) => !prev), children: _jsx(Menu, {}) }));
}
export function CollapsibleControl() {
    const { collapsed } = useSidebar();
    if (!collapsed)
        return;
    return (_jsxs("div", { className: "fixed flex shadow-lg animate-fd-fade-in rounded-xl p-0.5 border bg-fd-muted text-fd-muted-foreground z-10 xl:start-4 max-xl:end-4", style: {
            top: 'calc(var(--fd-banner-height) + var(--fd-tocnav-height) + var(--spacing) * 4)',
        }, children: [_jsx(SidebarCollapseTrigger, { className: cn(buttonVariants({
                    color: 'ghost',
                    size: 'icon-sm',
                    className: 'rounded-lg',
                })), children: _jsx(SidebarIcon, {}) }), _jsx(SearchToggle, { size: "icon-sm", className: "rounded-lg", hideIfDisabled: true })] }));
}
